betac
sim_sir <- function(g,beta,mu,seeds){
state <- rep(0,vcount(g)) #initial state of the simulation
state[seeds] <- 1 #infect the seeds
t <- 0
table <- data.frame(t=0,inf=seeds)
while(sum(state==1)>0){
t <- t + 1
#I -> R
infected <- which(state==1)
state[infected] <- ifelse(runif(length(infected)) < mu,2,1)
#S -> I
infected <- which(state==1)
susceptible <- which(state==0) #get them
contacts <- as.numeric(unlist(adjacent_vertices(g,infected))) #get the contacts of infected
contacts <- contacts[contacts %in% susceptible]
new_infected <- contacts[runif(length(contacts)) < beta] #infect contacts
if(length(new_infected)>0){
state[new_infected] <- 1
table <- rbind(table,data.frame(t,inf=new_infected))
}
}
table
}
results <- map_dfr(seq(0,0.25,0.005),
\(beta){ seeds <- sample(1:vcount(g),vcount(g)*0.01)
realization <- sim_sir(g,beta,mu,seeds)
data.frame(beta,ninf=nrow(realization))
})
results %>% ggplot(aes(x=beta,y=ninf))+ geom_point()+
geom_vline(xintercept = betac,linetype=2)
seeds <- sample(1:vcount(g),vcount(g)*0.01)
realization <- sim_sir(g,beta=0.2,mu=0.1,seeds)
# Node degree
table_d <- degree(g) %>% enframe(name = "inf",value="degree") %>%
merge(realization)
table_d %>%
ggplot(aes(x=t,y=degree)) + geom_point() + scale_y_log10()
# Closeness
table_c <- closeness(g,cutoff=2) %>% enframe(name = "inf",value="closeness") %>%
merge(realization)
table_c %>%
ggplot(aes(x=t,y=closeness)) + geom_point() + scale_y_log10()
# Betweenness
table_b <- betweenness(g) %>% enframe(name = "inf",value="betweenness") %>%
merge(realization)
table_b %>%
ggplot(aes(x=t,y=betweenness)) + geom_point() + scale_y_log10()
# Page Rank
table_pr <- page_rank(g)$vector %>% enframe(name = "inf",value="page_rank") %>%
merge(realization)
table_pr %>%
ggplot(aes(x=t,y=page_rank)) + geom_point() + scale_y_log10()
table <- merge(table_d,table_c)
table <- merge(table,table_pr)
table <- merge(table,table_b)
cor(table$t,table[,-c(1,2)])
#Random realization
seeds <- sample(1:vcount(g),vcount(g)*0.01)
realization_random <- sim_sir(g,beta = 0.2,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
#Targeted nodes realization
seeds <- page_rank(g)$vector %>% enframe(name = "inf",value="page_rank") %>%
slice_max(page_rank,n=round(vcount(g)*0.01))
realization_targeted <- sim_sir(g,beta = 0.2,mu=0.1, as.vector(as.integer(seeds$inf))) %>%
group_by(t) %>% summarize(ninf=n())
#Graph for comparison
ggplot() + geom_line(data=realization_random,aes(x=t,y=ninf,col="Random"))+
geom_line(data=realization_targeted,aes(x=t,y=ninf,col="Targeted"))
seeds <- sample(1:vcount(g),vcount(g)*0.01)
realization <- sim_sir(g,beta = 0.5,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
vaccinated_random <- sample(1:vcount(g),vcount(g)*0.05)#5% randomly chosen
gp <- delete_vertices(g,vaccinated_random)
seeds <- sample(1:vcount(gp),vcount(gp)*0.01)
realization_random <- sim_sir(gp,beta = 0.5,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
seeds <- page_rank(g)$vector %>% enframe(name = "inf",value="page_rank") %>%
slice_max(page_rank,n=round(vcount(g)*0.05))#5% according to page_rank
gp <- delete_vertices(g,seeds$inf)
seeds <- sample(1:vcount(gp),vcount(gp)*0.01)
realization_targeted <- sim_sir(gp,beta = 0.5,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
ggplot() + geom_line(data=realization,aes(x=t,y=ninf,col="No Vaccination")) +
geom_line(data=realization_random,aes(x=t,y=ninf,col="Vacc. Random"))+
geom_line(data=realization_targeted,aes(x=t,y=ninf,col="Vacc. Targeted"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(igraph)
library(visNetwork)
library(ggplot2)
library(ggthemes)
library(caret)
set.seed(123)
fm = read_delim("lasftm_asia/lastfm_asia_edges.csv", delim=",")
g = graph.data.frame(fm, directed = FALSE)
mu <- 0.1
betac <- mu*mean(degree(g))/(mean(degree(g)^2))
betac
sim_sir <- function(g,beta,mu,seeds){
state <- rep(0,vcount(g)) #initial state of the simulation
state[seeds] <- 1 #infect the seeds
t <- 0
table <- data.frame(t=0,inf=seeds)
while(sum(state==1)>0){
t <- t + 1
#I -> R
infected <- which(state==1)
state[infected] <- ifelse(runif(length(infected)) < mu,2,1)
#S -> I
infected <- which(state==1)
susceptible <- which(state==0) #get them
contacts <- as.numeric(unlist(adjacent_vertices(g,infected))) #get the contacts of infected
contacts <- contacts[contacts %in% susceptible]
new_infected <- contacts[runif(length(contacts)) < beta] #infect contacts
if(length(new_infected)>0){
state[new_infected] <- 1
table <- rbind(table,data.frame(t,inf=new_infected))
}
}
table
}
results <- map_dfr(seq(0,0.25,0.005),
\(beta){ seeds <- sample(1:vcount(g),vcount(g)*0.01)
realization <- sim_sir(g,beta,mu,seeds)
data.frame(beta,ninf=nrow(realization))
})
results %>% ggplot(aes(x=beta,y=ninf))+ geom_point()+
geom_vline(xintercept = betac,linetype=2)
seeds <- sample(1:vcount(g),vcount(g)*0.01)
realization <- sim_sir(g,beta=0.2,mu=0.1,seeds)
# Node degree
table_d <- degree(g) %>% enframe(name = "inf",value="degree") %>%
merge(realization)
table_d %>%
ggplot(aes(x=t,y=degree)) + geom_point() + scale_y_log10()
# Closeness
table_c <- closeness(g,cutoff=2) %>% enframe(name = "inf",value="closeness") %>%
merge(realization)
table_c %>%
ggplot(aes(x=t,y=closeness)) + geom_point() + scale_y_log10()
# Betweenness
table_b <- betweenness(g) %>% enframe(name = "inf",value="betweenness") %>%
merge(realization)
table_b %>%
ggplot(aes(x=t,y=betweenness)) + geom_point() + scale_y_log10()
# Page Rank
table_pr <- page_rank(g)$vector %>% enframe(name = "inf",value="page_rank") %>%
merge(realization)
table_pr %>%
ggplot(aes(x=t,y=page_rank)) + geom_point() + scale_y_log10()
table <- merge(table_d,table_c)
table <- merge(table,table_pr)
table <- merge(table,table_b)
cor(table$t,table[,-c(1,2)])
#Random realization
seeds <- sample(1:vcount(g),vcount(g)*0.01)#1% random seed
realization_random <- sim_sir(g,beta = 0.5,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
#Targeted nodes realization
seeds <- page_rank(g)$vector %>% enframe(name = "inf",value="page_rank") %>%
slice_max(page_rank,n=round(vcount(g)*0.01))#1% seeds of highest page rank
realization_targeted <- sim_sir(g,beta = 0.5,mu=0.1, as.vector(as.integer(seeds$inf))) %>%
group_by(t) %>% summarize(ninf=n())
#Graph for comparison
ggplot() + geom_line(data=realization_random,aes(x=t,y=ninf,col="Random"))+
geom_line(data=realization_targeted,aes(x=t,y=ninf,col="Targeted"))
#Random realization
seeds <- sample(1:vcount(g),vcount(g)*0.01)#1% random seed
realization_random <- sim_sir(g,beta = 0.2,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
#Targeted nodes realization
seeds <- page_rank(g)$vector %>% enframe(name = "inf",value="page_rank") %>%
slice_max(page_rank,n=round(vcount(g)*0.01))#1% seeds of highest page rank
realization_targeted <- sim_sir(g,beta = 0.2,mu=0.1, as.vector(as.integer(seeds$inf))) %>%
group_by(t) %>% summarize(ninf=n())
#Graph for comparison
ggplot() + geom_line(data=realization_random,aes(x=t,y=ninf,col="Random"))+
geom_line(data=realization_targeted,aes(x=t,y=ninf,col="Targeted"))
#Random realization
seeds <- sample(1:vcount(g),vcount(g)*0.01)#1% random seed
realization_random <- sim_sir(g,beta = 0.15,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
#Targeted nodes realization
seeds <- page_rank(g)$vector %>% enframe(name = "inf",value="page_rank") %>%
slice_max(page_rank,n=round(vcount(g)*0.01))#1% seeds of highest page rank
realization_targeted <- sim_sir(g,beta = 0.15,mu=0.1, as.vector(as.integer(seeds$inf))) %>%
group_by(t) %>% summarize(ninf=n())
#Graph for comparison
ggplot() + geom_line(data=realization_random,aes(x=t,y=ninf,col="Random"))+
geom_line(data=realization_targeted,aes(x=t,y=ninf,col="Targeted"))
#Random realization
seeds <- sample(1:vcount(g),vcount(g)*0.01)#1% random seed
realization_random <- sim_sir(g,beta = 0.1,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
#Targeted nodes realization
seeds <- page_rank(g)$vector %>% enframe(name = "inf",value="page_rank") %>%
slice_max(page_rank,n=round(vcount(g)*0.01))#1% seeds of highest page rank
realization_targeted <- sim_sir(g,beta = 0.1,mu=0.1, as.vector(as.integer(seeds$inf))) %>%
group_by(t) %>% summarize(ninf=n())
#Graph for comparison
ggplot() + geom_line(data=realization_random,aes(x=t,y=ninf,col="Random"))+
geom_line(data=realization_targeted,aes(x=t,y=ninf,col="Targeted"))
#Random realization
seeds <- sample(1:vcount(g),vcount(g)*0.01)#1% random seed
realization_random <- sim_sir(g,beta = 0.7,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
#Targeted nodes realization
seeds <- page_rank(g)$vector %>% enframe(name = "inf",value="page_rank") %>%
slice_max(page_rank,n=round(vcount(g)*0.01))#1% seeds of highest page rank
realization_targeted <- sim_sir(g,beta = 0.7,mu=0.1, as.vector(as.integer(seeds$inf))) %>%
group_by(t) %>% summarize(ninf=n())
#Graph for comparison
ggplot() + geom_line(data=realization_random,aes(x=t,y=ninf,col="Random"))+
geom_line(data=realization_targeted,aes(x=t,y=ninf,col="Targeted"))
#Random realization
seeds <- sample(1:vcount(g),vcount(g)*0.01)#1% random seed
realization_random <- sim_sir(g,beta = 0.7,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
#Targeted nodes realization
seeds <- betweenness(g) %>% enframe(name = "inf",value="betweenness") %>%
slice_max(betweenness,n=round(vcount(g)*0.01))#1% seeds of highest page rank
realization_targeted <- sim_sir(g,beta = 0.7,mu=0.1, as.vector(as.integer(seeds$inf))) %>%
group_by(t) %>% summarize(ninf=n())
#Graph for comparison
ggplot() + geom_line(data=realization_random,aes(x=t,y=ninf,col="Random"))+
geom_line(data=realization_targeted,aes(x=t,y=ninf,col="Targeted"))
#Random realization
seeds <- sample(1:vcount(g),vcount(g)*0.01)#1% random seed
realization_random <- sim_sir(g,beta = 0.2,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
#Targeted nodes realization
seeds <- betweenness(g) %>% enframe(name = "inf",value="betweenness") %>%
slice_max(betweenness,n=round(vcount(g)*0.01))#1% seeds of highest page rank
realization_targeted <- sim_sir(g,beta = 0.2,mu=0.1, as.vector(as.integer(seeds$inf))) %>%
group_by(t) %>% summarize(ninf=n())
#Graph for comparison
ggplot() + geom_line(data=realization_random,aes(x=t,y=ninf,col="Random"))+
geom_line(data=realization_targeted,aes(x=t,y=ninf,col="Targeted"))
#Random realization
seeds <- sample(1:vcount(g),vcount(g)*0.01)#1% random seed
realization_random <- sim_sir(g,beta = 0.5,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
#Targeted nodes realization
seeds <- betweenness(g) %>% enframe(name = "inf",value="betweenness") %>%
slice_max(betweenness,n=round(vcount(g)*0.01))#1% seeds of highest page rank
realization_targeted <- sim_sir(g,beta = 0.5,mu=0.1, as.vector(as.integer(seeds$inf))) %>%
group_by(t) %>% summarize(ninf=n())
#Graph for comparison
ggplot() + geom_line(data=realization_random,aes(x=t,y=ninf,col="Random"))+
geom_line(data=realization_targeted,aes(x=t,y=ninf,col="Targeted"))
#Random realization
seeds <- sample(1:vcount(g),vcount(g)*0.01)#1% random seed
realization_random <- sim_sir(g,beta = 0.5,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
#Targeted nodes realization
seeds <- page_rank(g)$vector %>% enframe(name = "inf",value="page_rank") %>%
slice_max(page_rank,n=round(vcount(g)*0.01))#1% seeds of highest page rank
realization_targeted <- sim_sir(g,beta = 0.5,mu=0.1, as.vector(as.integer(seeds$inf))) %>%
group_by(t) %>% summarize(ninf=n())
#Graph for comparison
ggplot() + geom_line(data=realization_random,aes(x=t,y=ninf,col="Random"))+
geom_line(data=realization_targeted,aes(x=t,y=ninf,col="Targeted"))
#Random realization
seeds <- sample(1:vcount(g),vcount(g)*0.01)#1% random seed
realization_random <- sim_sir(g,beta = 0.6,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
#Targeted nodes realization
seeds <- betweenness(g) %>% enframe(name = "inf",value="betweenness") %>%
slice_max(betweenness,n=round(vcount(g)*0.01))#1% seeds of highest page rank
realization_targeted <- sim_sir(g,beta = 0.6,mu=0.1, as.vector(as.integer(seeds$inf))) %>%
group_by(t) %>% summarize(ninf=n())
#Graph for comparison
ggplot() + geom_line(data=realization_random,aes(x=t,y=ninf,col="Random"))+
geom_line(data=realization_targeted,aes(x=t,y=ninf,col="Targeted"))
#Random realization
seeds <- sample(1:vcount(g),vcount(g)*0.01)#1% random seed
realization_random <- sim_sir(g,beta = 0.4,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
#Targeted nodes realization
seeds <- betweenness(g) %>% enframe(name = "inf",value="betweenness") %>%
slice_max(betweenness,n=round(vcount(g)*0.01))#1% seeds of highest page rank
realization_targeted <- sim_sir(g,beta = 0.4,mu=0.1, as.vector(as.integer(seeds$inf))) %>%
group_by(t) %>% summarize(ninf=n())
#Graph for comparison
ggplot() + geom_line(data=realization_random,aes(x=t,y=ninf,col="Random"))+
geom_line(data=realization_targeted,aes(x=t,y=ninf,col="Targeted"))
#Random realization
seeds <- sample(1:vcount(g),vcount(g)*0.01)#1% random seed
realization_random <- sim_sir(g,beta = 0.1,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
#Targeted nodes realization
seeds <- betweenness(g) %>% enframe(name = "inf",value="betweenness") %>%
slice_max(betweenness,n=round(vcount(g)*0.01))#1% seeds of highest page rank
realization_targeted <- sim_sir(g,beta = 0.1,mu=0.1, as.vector(as.integer(seeds$inf))) %>%
group_by(t) %>% summarize(ninf=n())
#Graph for comparison
ggplot() + geom_line(data=realization_random,aes(x=t,y=ninf,col="Random"))+
geom_line(data=realization_targeted,aes(x=t,y=ninf,col="Targeted"))
#Random realization
seeds <- sample(1:vcount(g),vcount(g)*0.01)#1% random seed
realization_random <- sim_sir(g,beta = 0.15,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
#Targeted nodes realization
seeds <- betweenness(g) %>% enframe(name = "inf",value="betweenness") %>%
slice_max(betweenness,n=round(vcount(g)*0.01))#1% seeds of highest page rank
realization_targeted <- sim_sir(g,beta = 0.15,mu=0.1, as.vector(as.integer(seeds$inf))) %>%
group_by(t) %>% summarize(ninf=n())
#Graph for comparison
ggplot() + geom_line(data=realization_random,aes(x=t,y=ninf,col="Random"))+
geom_line(data=realization_targeted,aes(x=t,y=ninf,col="Targeted"))
#Random realization
seeds <- sample(1:vcount(g),vcount(g)*0.01)#1% random seed
realization_random <- sim_sir(g,beta = 0.15,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
#Targeted nodes realization
seeds <- page_rank(g)$vector %>% enframe(name = "inf",value="page_rank") %>%
slice_max(page_rank,n=round(vcount(g)*0.01))#1% seeds of highest page rank
realization_targeted <- sim_sir(g,beta = 0.15,mu=0.1, as.vector(as.integer(seeds$inf))) %>%
group_by(t) %>% summarize(ninf=n())
#Graph for comparison
ggplot() + geom_line(data=realization_random,aes(x=t,y=ninf,col="Random"))+
geom_line(data=realization_targeted,aes(x=t,y=ninf,col="Targeted"))
seeds <- sample(1:vcount(g),vcount(g)*0.01)
realization <- sim_sir(g,beta = 0.15,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
vaccinated_random <- sample(1:vcount(g),vcount(g)*0.05)#5% randomly chosen
gp <- delete_vertices(g,vaccinated_random)
seeds <- sample(1:vcount(gp),vcount(gp)*0.01)
realization_random <- sim_sir(gp,beta = 0.5,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
seeds <- page_rank(g)$vector %>% enframe(name = "inf",value="page_rank") %>%
slice_max(page_rank,n=round(vcount(g)*0.05))#5% according to page_rank
gp <- delete_vertices(g,seeds$inf)
seeds <- sample(1:vcount(gp),vcount(gp)*0.01)
realization_targeted <- sim_sir(gp,beta = 0.15,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
ggplot() + geom_line(data=realization,aes(x=t,y=ninf,col="No Vaccination")) +
geom_line(data=realization_random,aes(x=t,y=ninf,col="Vacc. Random"))+
geom_line(data=realization_targeted,aes(x=t,y=ninf,col="Vacc. Targeted"))
seeds <- sample(1:vcount(g),vcount(g)*0.01)
realization <- sim_sir(g,beta = 0.15,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
vaccinated_random <- sample(1:vcount(g),vcount(g)*0.05)#5% randomly chosen
gp <- delete_vertices(g,vaccinated_random)
seeds <- sample(1:vcount(gp),vcount(gp)*0.01)
realization_random <- sim_sir(gp,beta = 0.15,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
ggplot() + geom_line(data=realization,aes(x=t,y=ninf,col="No Vaccination")) +
geom_line(data=realization_random,aes(x=t,y=ninf,col="Vacc. Random"))+
geom_line(data=realization_targeted,aes(x=t,y=ninf,col="Vacc. Targeted"))
seeds <- sample(1:vcount(g),vcount(g)*0.01)
realization <- sim_sir(g,beta = 0.5,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
vaccinated_random <- sample(1:vcount(g),vcount(g)*0.05)#5% randomly chosen
gp <- delete_vertices(g,vaccinated_random)
seeds <- sample(1:vcount(gp),vcount(gp)*0.01)
realization_random <- sim_sir(gp,beta = 0.5,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
seeds <- page_rank(g)$vector %>% enframe(name = "inf",value="page_rank") %>%
slice_max(page_rank,n=round(vcount(g)*0.05))#5% according to page_rank
gp <- delete_vertices(g,seeds$inf)
seeds <- sample(1:vcount(gp),vcount(gp)*0.01)
realization_targeted <- sim_sir(gp,beta = 0.5,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
ggplot() + geom_line(data=realization,aes(x=t,y=ninf,col="No Vaccination")) +
geom_line(data=realization_random,aes(x=t,y=ninf,col="Vacc. Random"))+
geom_line(data=realization_targeted,aes(x=t,y=ninf,col="Vacc. Targeted"))
knitr::opts_chunk$set(echo = TRUE)
# create dataframe
seeds <- sample(1:vcount(g),vcount(g)*0.01)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(igraph)
library(visNetwork)
library(ggplot2)
library(ggthemes)
library(caret)
set.seed(123)
fm = read_delim("lasftm_asia/lastfm_asia_edges.csv", delim=",")
g = graph.data.frame(fm, directed = FALSE)
mu <- 0.1
betac <- mu*mean(degree(g))/(mean(degree(g)^2))
betac
sim_sir <- function(g,beta,mu,seeds){
state <- rep(0,vcount(g)) #initial state of the simulation
state[seeds] <- 1 #infect the seeds
t <- 0
table <- data.frame(t=0,inf=seeds)
while(sum(state==1)>0){
t <- t + 1
#I -> R
infected <- which(state==1)
state[infected] <- ifelse(runif(length(infected)) < mu,2,1)
#S -> I
infected <- which(state==1)
susceptible <- which(state==0) #get them
contacts <- as.numeric(unlist(adjacent_vertices(g,infected))) #get the contacts of infected
contacts <- contacts[contacts %in% susceptible]
new_infected <- contacts[runif(length(contacts)) < beta] #infect contacts
if(length(new_infected)>0){
state[new_infected] <- 1
table <- rbind(table,data.frame(t,inf=new_infected))
}
}
table
}
results <- map_dfr(seq(0,0.25,0.005),
\(beta){ seeds <- sample(1:vcount(g),vcount(g)*0.01)
realization <- sim_sir(g,beta,mu,seeds)
data.frame(beta,ninf=nrow(realization))
})
results %>% ggplot(aes(x=beta,y=ninf))+ geom_point()+
geom_vline(xintercept = betac,linetype=2)
seeds <- sample(1:vcount(g),vcount(g)*0.01)
realization <- sim_sir(g,beta=0.2,mu=0.1,seeds)
# Node degree
table_d <- degree(g) %>% enframe(name = "inf",value="degree") %>%
merge(realization)
table_d %>%
ggplot(aes(x=t,y=degree)) + geom_point() + scale_y_log10()
# Closeness
table_c <- closeness(g,cutoff=2) %>% enframe(name = "inf",value="closeness") %>%
merge(realization)
table_c %>%
ggplot(aes(x=t,y=closeness)) + geom_point() + scale_y_log10()
# Betweenness
table_b <- betweenness(g) %>% enframe(name = "inf",value="betweenness") %>%
merge(realization)
table_b %>%
ggplot(aes(x=t,y=betweenness)) + geom_point() + scale_y_log10()
# Page Rank
table_pr <- page_rank(g)$vector %>% enframe(name = "inf",value="page_rank") %>%
merge(realization)
table_pr %>%
ggplot(aes(x=t,y=page_rank)) + geom_point() + scale_y_log10()
table <- merge(table_d,table_c)
table <- merge(table,table_pr)
table <- merge(table,table_b)
cor(table$t,table[,-c(1,2)])
#Random realization
seeds <- sample(1:vcount(g),vcount(g)*0.01)#1% random seed
realization_random <- sim_sir(g,beta = 0.15,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
#Targeted nodes realization
seeds <- page_rank(g)$vector %>% enframe(name = "inf",value="page_rank") %>%
slice_max(page_rank,n=round(vcount(g)*0.01))#1% seeds of highest page rank
realization_targeted <- sim_sir(g,beta = 0.15,mu=0.1, as.vector(as.integer(seeds$inf))) %>%
group_by(t) %>% summarize(ninf=n())
#Graph for comparison
ggplot() + geom_line(data=realization_random,aes(x=t,y=ninf,col="Random"))+
geom_line(data=realization_targeted,aes(x=t,y=ninf,col="Targeted"))
#Random realization
seeds <- sample(1:vcount(g),vcount(g)*0.01)#1% random seed
realization_random <- sim_sir(g,beta = 0.15,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
#Targeted nodes realization
seeds <- betweenness(g) %>% enframe(name = "inf",value="betweenness") %>%
slice_max(betweenness,n=round(vcount(g)*0.01))#1% seeds of highest page rank
realization_targeted <- sim_sir(g,beta = 0.15,mu=0.1, as.vector(as.integer(seeds$inf))) %>%
group_by(t) %>% summarize(ninf=n())
#Graph for comparison
ggplot() + geom_line(data=realization_random,aes(x=t,y=ninf,col="Random"))+
geom_line(data=realization_targeted,aes(x=t,y=ninf,col="Targeted"))
seeds <- sample(1:vcount(g),vcount(g)*0.01)
realization <- sim_sir(g,beta = 0.5,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
vaccinated_random <- sample(1:vcount(g),vcount(g)*0.05)#5% randomly chosen
gp <- delete_vertices(g,vaccinated_random)
seeds <- sample(1:vcount(gp),vcount(gp)*0.01)
realization_random <- sim_sir(gp,beta = 0.5,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
seeds <- page_rank(g)$vector %>% enframe(name = "inf",value="page_rank") %>%
slice_max(page_rank,n=round(vcount(g)*0.05))#5% according to page_rank
gp <- delete_vertices(g,seeds$inf)
seeds <- sample(1:vcount(gp),vcount(gp)*0.01)
realization_targeted <- sim_sir(gp,beta = 0.5,mu=0.1,seeds) %>%
group_by(t) %>% summarize(ninf=n())
ggplot() + geom_line(data=realization,aes(x=t,y=ninf,col="No Vaccination")) +
geom_line(data=realization_random,aes(x=t,y=ninf,col="Vacc. Random"))+
geom_line(data=realization_targeted,aes(x=t,y=ninf,col="Vacc. Targeted"))
# create dataframe
seeds <- sample(1:vcount(g),vcount(g)*0.01)
realization <- sim_sir(g,beta=0.2,mu=0.1,seeds)
realization %>% distinct()
realization = realization %>% distinct()
nodes_df = nodes_data %>% left_join(realization, by= c('id'='inf')) %>%
drop_na()
nodes_data <- data.frame(
id = as.numeric(V(g)$name),
degree = degree(g),
closeness = closeness(g,cutoff=2),
betweenness = betweenness(g),
pageRank = page.rank(g)$vector
)
nodes_df = nodes_data %>% left_join(realization, by= c('id'='inf')) %>%
drop_na()
View(nodes_df)
head(nodes_df)
model <- lm(t ~ degree + closeness + betweenness + pageRank)
model <- lm(t ~ degree + closeness + betweenness + pageRank, data = nodes_df)
pred = predict(model)
hist(pred)
density(pred)
plot(density(pred))
summary(pred)
nodes_df %>% mutate(time_pred = pred(model))
nodes_df %>% mutate(time_pred = predict(model))
nodes_df <- nodes_df %>% mutate(time_pred = predict(model))
nodes_df %>% slice_max(time_pred, n = 76)
nodes_df %>% slice_min(time_pred, n = 76)
seeds <- nodes_df %>% slice_min(time_pred, n = 76) %>% pull(id)
